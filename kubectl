#!/bin/bash
DEFAULT_VERSION="v1.22.15"
CLIENTS_PATH="$HOME/.kubectl"
DEFAULT_CLIENT="$CLIENTS_PATH/$DEFAULT_VERSION"
OS_ARCH="linux/amd64"

function downloadClient {
	mkdir -p "$CLIENTS_PATH"
	if [[ $(uname -s) == "Darwin" ]] && [[ $(uname -m) == "arm64" ]]; then
		OS_ARCH="darwin/arm64"
	fi
	wget -O "$CLIENTS_PATH/$1" "https://storage.googleapis.com/kubernetes-release/release/$1/bin/$OS_ARCH/kubectl"
	chmod +x "$CLIENTS_PATH/$1"
}

function defaultClient {
	exec $DEFAULT_CLIENT "$@"
}

if ! [ -x "$(command -v jq)" ]; then
  echo 'kubectl wrapper error: jq is not installed. Install it with your favorite package manager' >&2
  exit 1
fi

#Download default client if we dont have it. To be able to ask the server for its version
if [ ! -f "$DEFAULT_CLIENT" ]; then
	downloadClient "$DEFAULT_VERSION"
fi

if [ "$1" == "config" ]; then
	defaultClient $@
fi
if [ "$1" == "help" ]; then
	defaultClient $@
fi
if [[ "$@" == *'--help'* ]];then
	defaultClient $@
fi

SERVER_VERSION=$($DEFAULT_CLIENT version -o json | jq ".serverVersion.gitVersion" -r | grep -Po "v\d+.\d+.\d+")
if [ -z "$SERVER_VERSION" ]; then
	echo "kubectl wrapper error: Unable to get version from cluster, aborting."
	exit 1
fi
CLIENT="$CLIENTS_PATH/$SERVER_VERSION"

#Download client if we dont have it
if [ ! -f "$CLIENT" ]; then
	downloadClient "$SERVER_VERSION"
fi

exec $CLIENT "$@"
